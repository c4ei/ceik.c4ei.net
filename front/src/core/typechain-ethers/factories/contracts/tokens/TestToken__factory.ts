/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestToken,
  TestTokenInterface,
} from "../../../contracts/tokens/TestToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "safeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200167938038062001679833981016040819052620000349162000346565b8251839083906200004d906003906020850190620001d3565b50805162000063906004906020840190620001d3565b505050620000806200007a6200009560201b60201c565b62000099565b6200008c3382620000eb565b5050506200041d565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001465760405162461bcd60e51b815260206004820152601e60248201527f4b4950373a206d696e7420746f20746865207a65726f20616464726573730000604482015260640160405180910390fd5b80600260008282546200015a9190620003b9565b90915550506001600160a01b0382166000908152602081905260408120805483929062000189908490620003b9565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001e190620003e0565b90600052602060002090601f01602090048101928262000205576000855562000250565b82601f106200022057805160ff191683800117855562000250565b8280016001018555821562000250579182015b828111156200025057825182559160200191906001019062000233565b506200025e92915062000262565b5090565b5b808211156200025e576000815560010162000263565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002a157600080fd5b81516001600160401b0380821115620002be57620002be62000279565b604051601f8301601f19908116603f01168101908282118183101715620002e957620002e962000279565b816040528381526020925086838588010111156200030657600080fd5b600091505b838210156200032a57858201830151818301840152908201906200030b565b838211156200033c5760008385830101525b9695505050505050565b6000806000606084860312156200035c57600080fd5b83516001600160401b03808211156200037457600080fd5b62000382878388016200028f565b945060208601519150808211156200039957600080fd5b50620003a8868287016200028f565b925050604084015190509250925092565b60008219821115620003db57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620003f557607f821691505b602082108114156200041757634e487b7160e01b600052602260045260246000fd5b50919050565b61124c806200042d6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b8578063a457c2d71161007c578063a457c2d714610275578063a9059cbb14610288578063b88d4fde1461029b578063dd62ed3e146102ae578063eb795549146102c1578063f2fde38b146102d457600080fd5b806370a082311461020e578063715018a6146102375780638da5cb5b1461023f57806395d89b411461025a5780639dc29fac1461026257600080fd5b8063313ce567116100ff578063313ce567146101b157806339509351146101c057806340c10f19146101d3578063423f6cef146101e857806342842e0e146101fb57600080fd5b806301ffc9a71461013c57806306fdde0314610164578063095ea7b31461017957806318160ddd1461018c57806323b872dd1461019e575b600080fd5b61014f61014a366004610e51565b6102e7565b60405190151581526020015b60405180910390f35b61016c610339565b60405161015b9190610ec2565b61014f610187366004610ef1565b6103cb565b6002545b60405190815260200161015b565b61014f6101ac366004610f1b565b6103e3565b6040516012815260200161015b565b61014f6101ce366004610ef1565b610407565b6101e66101e1366004610ef1565b610429565b005b6101e66101f6366004610ef1565b61046a565b6101e6610209366004610f1b565b61048f565b61019061021c366004610f57565b6001600160a01b031660009081526020819052604090205490565b6101e66104bc565b6005546040516001600160a01b03909116815260200161015b565b61016c6104f2565b6101e6610270366004610ef1565b610501565b61014f610283366004610ef1565b610535565b61014f610296366004610ef1565b6105ae565b6101e66102a9366004611015565b6105bc565b6101906102bc36600461107d565b6105db565b6101e66102cf3660046110b0565b610606565b6101e66102e2366004610f57565b610613565b60006001600160e01b03198216636578737160e01b148061031857506001600160e01b0319821663a219a02560e01b145b8061033357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606003805461034890611107565b80601f016020809104026020016040519081016040528092919081815260200182805461037490611107565b80156103c15780601f10610396576101008083540402835291602001916103c1565b820191906000526020600020905b8154815290600101906020018083116103a457829003601f168201915b5050505050905090565b6000336103d98185856106ae565b5060019392505050565b6000336103f18582856107d1565b6103fc858585610845565b506001949350505050565b6000336103d981858561041a83836105db565b6104249190611158565b6106ae565b6005546001600160a01b0316331461045c5760405162461bcd60e51b815260040161045390611170565b60405180910390fd5b6104668282610a0f565b5050565b600033905061048a81848460405180602001604052806000815250610aee565b505050565b3361049b8482846107d1565b6104b684848460405180602001604052806000815250610aee565b50505050565b6005546001600160a01b031633146104e65760405162461bcd60e51b815260040161045390611170565b6104f06000610b69565b565b60606004805461034890611107565b6005546001600160a01b0316331461052b5760405162461bcd60e51b815260040161045390611170565b6104668282610bbb565b6000338161054382866105db565b9050838110156105a15760405162461bcd60e51b8152602060048201526024808201527f4b4950373a2064656372656173656420616c6c6f77616e63652062656c6f77206044820152637a65726f60e01b6064820152608401610453565b6103fc82868684036106ae565b6000336103d9818585610845565b336105c88582856107d1565b6105d485858585610aee565b5050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b336104b681858585610aee565b6005546001600160a01b0316331461063d5760405162461bcd60e51b815260040161045390611170565b6001600160a01b0381166106a25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610453565b6106ab81610b69565b50565b6001600160a01b0383166107105760405162461bcd60e51b815260206004820152602360248201527f4b4950373a20617070726f76652066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610453565b6001600160a01b0382166107705760405162461bcd60e51b815260206004820152602160248201527f4b4950373a20617070726f766520746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610453565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006107dd84846105db565b905060001981146104b657818110156108385760405162461bcd60e51b815260206004820152601c60248201527f4b4950373a20696e73756666696369656e7420616c6c6f77616e6365000000006044820152606401610453565b6104b684848484036106ae565b6001600160a01b0383166108a75760405162461bcd60e51b8152602060048201526024808201527f4b4950373a207472616e736665722066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610453565b6001600160a01b0382166109085760405162461bcd60e51b815260206004820152602260248201527f4b4950373a207472616e7366657220746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610453565b6001600160a01b0383166000908152602081905260409020548181101561097f5760405162461bcd60e51b815260206004820152602560248201527f4b4950373a207472616e7366657220616d6f756e7420657863656564732062616044820152646c616e636560d81b6064820152608401610453565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906109b6908490611158565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a0291815260200190565b60405180910390a36104b6565b6001600160a01b038216610a655760405162461bcd60e51b815260206004820152601e60248201527f4b4950373a206d696e7420746f20746865207a65726f206164647265737300006044820152606401610453565b8060026000828254610a779190611158565b90915550506001600160a01b03821660009081526020819052604081208054839290610aa4908490611158565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b610af9848484610845565b610b0584848484610cfe565b6104b65760405162461bcd60e51b815260206004820152602f60248201527f4b4950373a207472616e7366657220746f206e6f6e20494b495037526563656960448201526e3b32b91034b6b83632b6b2b73a32b960891b6064820152608401610453565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610c115760405162461bcd60e51b815260206004820181905260248201527f4b4950373a206275726e2066726f6d20746865207a65726f20616464726573736044820152606401610453565b6001600160a01b03821660009081526020819052604090205481811015610c845760405162461bcd60e51b815260206004820152602160248201527f4b4950373a206275726e20616d6f756e7420657863656564732062616c616e636044820152606560f81b6064820152608401610453565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610cb39084906111a5565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b60006001600160a01b0384163b156103fc57604051634e8c461160e11b81526001600160a01b03851690639d188c2290610d429033908990889088906004016111bc565b6020604051808303816000875af1925050508015610d7d575060408051601f3d908101601f19168201909252610d7a918101906111f9565b60015b610e1e573d808015610dab576040519150601f19603f3d011682016040523d82523d6000602084013e610db0565b606091505b508051610e165760405162461bcd60e51b815260206004820152602e60248201527f4b4950373a207472616e7366657220746f206e6f6e204b49503752656365697660448201526d32b91034b6b83632b6b2b73a32b960911b6064820152608401610453565b805181602001fd5b6001600160e01b031916634e8c461160e11b149050949350505050565b6001600160e01b0319811681146106ab57600080fd5b600060208284031215610e6357600080fd5b8135610e6e81610e3b565b9392505050565b6000815180845260005b81811015610e9b57602081850181015186830182015201610e7f565b81811115610ead576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610e6e6020830184610e75565b80356001600160a01b0381168114610eec57600080fd5b919050565b60008060408385031215610f0457600080fd5b610f0d83610ed5565b946020939093013593505050565b600080600060608486031215610f3057600080fd5b610f3984610ed5565b9250610f4760208501610ed5565b9150604084013590509250925092565b600060208284031215610f6957600080fd5b610e6e82610ed5565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610f9957600080fd5b813567ffffffffffffffff80821115610fb457610fb4610f72565b604051601f8301601f19908116603f01168101908282118183101715610fdc57610fdc610f72565b81604052838152866020858801011115610ff557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561102b57600080fd5b61103485610ed5565b935061104260208601610ed5565b925060408501359150606085013567ffffffffffffffff81111561106557600080fd5b61107187828801610f88565b91505092959194509250565b6000806040838503121561109057600080fd5b61109983610ed5565b91506110a760208401610ed5565b90509250929050565b6000806000606084860312156110c557600080fd5b6110ce84610ed5565b925060208401359150604084013567ffffffffffffffff8111156110f157600080fd5b6110fd86828701610f88565b9150509250925092565b600181811c9082168061111b57607f821691505b6020821081141561113c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561116b5761116b611142565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000828210156111b7576111b7611142565b500390565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111ef90830184610e75565b9695505050505050565b60006020828403121561120b57600080fd5b8151610e6e81610e3b56fea264697066735822122050cd6180c913d97f67c7751e78e5a3c1abc5f25bb600d85fbc21eb57711112d664736f6c634300080c0033";

type TestTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestToken__factory extends ContractFactory {
  constructor(...args: TestTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _totalSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestToken> {
    return super.deploy(
      _name,
      _symbol,
      _totalSupply,
      overrides || {}
    ) as Promise<TestToken>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _totalSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _totalSupply,
      overrides || {}
    );
  }
  override attach(address: string): TestToken {
    return super.attach(address) as TestToken;
  }
  override connect(signer: Signer): TestToken__factory {
    return super.connect(signer) as TestToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestTokenInterface {
    return new utils.Interface(_abi) as TestTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestToken {
    return new Contract(address, _abi, signerOrProvider) as TestToken;
  }
}
